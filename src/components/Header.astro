---
import Logo from "./Logo.astro";
import NavLink from "./NavLink.astro";
import Search from "./Search.astro";
import ActionButton from "./ActionButton.astro";
import MiniProfile from "./MiniProfile.astro";

// Header component props
interface Props {
  user?: {
    name: string;
    avatar: string;
    verified?: boolean;
    username?: string;
  };
  currentPage?: string;
}

const { user, currentPage = "/" } = Astro.props;

// Navigation items with OnlyFrans-themed content
const navItems = [
  {
    href: "/",
    label: "Home",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>',
  },
  {
    href: "/",
    label: "Subscriptions",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5zM4.83 2.83A4 4 0 004 6v10a4 4 0 004 4h8a4 4 0 004-4V6a4 4 0 00-4-4H8a4 4 0 00-2.83 1.17z"/>',
  },
  {
    href: "/messages",
    label: "Messages",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>',
  },
  {
    href: "/",
    label: "Profile",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>',
  },
];
---

<header
  class="sticky top-0 z-40 w-full border-b border-gray-200 bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60"
>
  <div class="container mx-auto px-4">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo Section -->
      <div class="flex items-center space-x-4">
        <Logo />
      </div>

      <!-- Navigation Section -->
      <nav class="hidden md:flex items-center space-x-8">
        {
          navItems.map((item) => (
            <NavLink
              href={item.href}
              label={item.label}
              icon={item.icon}
              isActive={false} /* Removed active state comparison */
              activeColor="text-pink-600"
              inactiveColor="text-gray-600"
              hoverColor="hover:text-pink-600"
            />
          ))
        }
      </nav>

      <!-- Search Section -->
      <div class="flex-1 max-w-md mx-4 hidden lg:block">
        <Search placeholder="Search OnlyFrans..." />
      </div>

      <!-- Actions Section -->
      <div class="flex items-center space-x-4">
        <!-- Subscribe Button -->
        <div class="hidden md:block">
          <ActionButton
            label="Subscribe"
            icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>'
            variant="primary"
            size="md"
          />
        </div>

        <!-- Mobile Menu Button -->
        <button
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 transition-colors"
          aria-label="Toggle menu"
          aria-expanded="false"
        >
          <svg
            class="h-5 w-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>

        <!-- User Menu -->
        {
          user ? (
            <div class="flex items-center space-x-3">
              <MiniProfile user={user} />
            </div>
          ) : (
            <div class="flex items-center space-x-2">
              <ActionButton label="Log in" variant="outline" size="md" />
              <ActionButton label="Sign up" variant="primary" size="md" />
            </div>
          )
        }
      </div>
    </div>
  </div>
</header>

<!-- Overlay for mobile menu backdrop - Moved outside header for proper z-index stacking -->
<div
  id="mobile-menu-overlay"
  class="fixed inset-0 bg-black bg-opacity-50 z-[998] hidden md:hidden"
></div>

<!-- Mobile Navigation Menu - Moved outside header for proper z-index stacking -->
<div
  id="mobile-menu"
  class="fixed inset-0 right-0 w-full bg-white z-[999] md:hidden transform translate-x-full transition-transform duration-300 ease-in-out"
>
  <div class="flex flex-col h-full w-full">
    <!-- Header with close button -->
    <div class="flex justify-between items-center p-4 border-b bg-white">
      <h2 class="text-lg font-medium text-pink-600">Menu</h2>
      <button
        id="close-menu-button"
        class="p-2 rounded-md text-gray-600 hover:text-gray-900"
      >
        <svg
          class="h-5 w-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Navigation Links -->
    <div class="flex-1 overflow-y-auto bg-white min-h-[200px]">
      <div class="flex flex-col w-full bg-white shadow-lg">
        {
          navItems.map((item) => (
            <a
              href="/"
              class="flex items-center px-6 py-5 text-lg font-medium transition-colors border-b border-gray-100 bg-white text-gray-700 hover:text-pink-600"
            >
              <svg
                class="mr-4 h-6 w-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                set:html={item.icon}
              />
              {item.label}
            </a>
          ))
        }
      </div>
    </div>

    <!-- Subscribe button at the bottom -->
    <div class="p-4 bg-white border-t">
      <ActionButton
        label="Subscribe"
        icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>'
        variant="primary"
        size="md"
        extraClasses="w-full justify-center"
      />
    </div>
  </div>
</div>

<script>
  // Client-side JavaScript for mobile menu functionality
  document.addEventListener("DOMContentLoaded", () => {
    initializeMenu();
  });

  document.addEventListener("astro:page-load", () => {
    initializeMenu();
  });

  function initializeMenu() {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const closeMenuButton = document.getElementById("close-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const mobileMenuOverlay = document.getElementById("mobile-menu-overlay");

    function openMenu() {
      document.body.style.overflow = "hidden"; // Prevent scrolling
      mobileMenu?.classList.remove("translate-x-full");
      mobileMenu?.classList.add("translate-x-0");
      mobileMenuOverlay?.classList.remove("hidden");
      mobileMenuButton?.setAttribute("aria-expanded", "true");
    }

    function closeMenu() {
      document.body.style.overflow = ""; // Re-enable scrolling
      mobileMenu?.classList.remove("translate-x-0");
      mobileMenu?.classList.add("translate-x-full");
      mobileMenuOverlay?.classList.add("hidden");
      mobileMenuButton?.setAttribute("aria-expanded", "false");
    }

    // Toggle mobile menu
    mobileMenuButton?.addEventListener("click", openMenu);
    closeMenuButton?.addEventListener("click", closeMenu);
    mobileMenuOverlay?.addEventListener("click", closeMenu);

    // Close menu when window is resized to desktop size
    window.addEventListener("resize", () => {
      if (window.innerWidth >= 768) {
        // md breakpoint in Tailwind
        closeMenu();
      }
    });
  }
</script>
