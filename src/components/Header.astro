---
import Logo from "./Logo.astro";
import NavLink from "./NavLink.astro";
import Search from "./Search.astro";
import ActionButton from "./ActionButton.astro";
import MiniProfile from "./MiniProfile.astro";

// Header component props
interface Props {
  user?: {
    name: string;
    avatar: string;
    verified?: boolean;
    username?: string;
  };
  currentPage?: string;
}

const { user, currentPage = "/" } = Astro.props;

// Navigation items with OnlyFrans-themed content
const navItems = [
  {
    href: "/",
    label: "Home",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>'
  },
  {
    href: "/subscriptions",
    label: "Subscriptions",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5zM4.83 2.83A4 4 0 004 6v10a4 4 0 004 4h8a4 4 0 004-4V6a4 4 0 00-4-4H8a4 4 0 00-2.83 1.17z"/>'
  },
  {
    href: "/messages",
    label: "Messages",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>'
  },
  {
    href: "/profile",
    label: "Profile",
    icon: '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>'
  }
];
---

<header class="sticky top-0 z-50 w-full border-b border-gray-200 bg-white/95 backdrop-blur supports-[backdrop-filter]:bg-white/60">
  <div class="container mx-auto px-4">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo Section -->
      <div class="flex items-center space-x-4">
        <Logo />
      </div>

      <!-- Navigation Section -->
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map(item => (
          <NavLink 
            href={item.href}
            label={item.label}
            icon={item.icon}
            isActive={currentPage === item.href}
            activeColor="text-pink-600"
            inactiveColor="text-gray-600"
            hoverColor="hover:text-pink-600"
          />
        ))}
      </nav>

      <!-- Search Section -->
      <div class="flex-1 max-w-md mx-4 hidden lg:block">
        <Search placeholder="Search OnlyFrans..." />
      </div>

      <!-- Actions Section -->
      <div class="flex items-center space-x-4">
        <!-- Subscribe Button -->
        <div class="hidden md:block">
          <ActionButton 
            label="Subscribe"
            icon='<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>'
            variant="primary"
            size="md"
          />
        </div>

        <!-- Mobile Menu Button -->
        <button class="md:hidden p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 transition-colors">
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
        </button>

        <!-- User Menu -->
        {user ? (
          <div class="flex items-center space-x-3">
            <MiniProfile user={user} />
          </div>
        ) : (
          <div class="flex items-center space-x-2">
            <ActionButton 
              label="Log in"
              variant="outline"
              size="md"
            />
            <ActionButton 
              label="Sign up"
              variant="primary"
              size="md"
            />
          </div>
        )}
      </div>
    </div>
  </div>
</header>

